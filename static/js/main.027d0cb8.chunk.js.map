{"version":3,"sources":["actions/types.js","actions/videos.js","containers/Seach.js","components/VideoCard.js","containers/VideoList.js","components/Home.js","containers/Video.js","components/App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["GET_Q","GET_NEW_VIDEOS","BASE_URL","MAX","KEY","getVideos","pageToken","arguments","length","undefined","q","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","nextPageToken","videos","wrap","_context","prev","next","alert","abrupt","axios","get","concat","params","key","maxResults","part","type","sent","data","items","map","video","videoId","id","src","snippet","thumbnails","medium","url","channel","channelTitle","title","publishedAt","description","getInitialVideos","getNewVideos","t0","console","log","stop","_x","apply","this","Search","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","evt","setState","defineProperty","target","name","value","handleSubmit","preventDefault","state","search","react_default","createElement","className","onSubmit","onChange","placeholder","size","Component","connected","connect","VideoCard","react_router_dom","to","alt","style","textAlign","uuidv4","require","VideoList","infiniteScroll","document","body","scrollHeight","window","innerHeight","scrollY","getAPI","addEventListener","removeEventListener","currentPageVideos","components_VideoCard","assign","Home","Seach","containers_VideoList","Video","width","height","onClick","history","push","ownProps","filter","match","App","exact","href","rel","react_router","path","render","components_Home","containers_Video","Boolean","location","hostname","rootReducer","action","toConsumableArray","store","createStore","compose","applyMiddleware","thunk","ReactDOM","es","basename","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.027d0cb8.chunk.js","sourcesContent":["export const GET_Q = 'GET_Q';\nexport const GET_NEW_VIDEOS = 'GET_NEW_VIDEOS';\n","import axios from 'axios';\nimport { GET_Q, GET_NEW_VIDEOS } from './types';\n\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3/search';\nconst MAX = 12;\n\n//const KEY = 'AIzaSyCY6AZpSw-4mNJRbmCn_Bp8T4jTiANrwjM';\n//const KEY = 'AIzaSyAPw5O_9xI4yN_mxAepfwuS_Rn2qZieR5A';\nconst KEY = 'AIzaSyBYjNe14Q0ik3HdVS-qFZkjadzYQ-iKaA0';\n\nexport function getVideos(pageToken = '', q = '') {\n  return async function(dispatch) {\n    try {\n      if (!q) {\n        alert('Hi, What videos do you want to search?');\n        return;\n      }\n\n      const response = await axios.get(`${BASE_URL}`, {\n        params: {\n          key: KEY,\n          q,\n          pageToken,\n          maxResults: MAX,\n          part: 'snippet',\n          type: 'video'\n        }\n      });\n      const nextPageToken = response.data.nextPageToken;\n      const videos = response.data.items.map(video => ({\n        videoId: video.id.videoId,\n        src: video.snippet.thumbnails.medium.url,\n        channel: video.snippet.channelTitle,\n        title: video.snippet.title,\n        publishedAt: video.snippet.publishedAt,\n        description: video.snippet.description\n      }));\n\n      // if there is no pageToken, dispatch getInitialVideos\n      if (!pageToken)\n        return dispatch(getInitialVideos(q, nextPageToken, videos));\n\n      // if there is pageToken, dispatch getNewVideos\n      if (pageToken !== nextPageToken)\n        return dispatch(getNewVideos(nextPageToken, videos));\n    } catch (err) {\n      alert(err);\n      console.log('error');\n    }\n  };\n}\n\nexport function getInitialVideos(q, nextPageToken, videos) {\n  return {\n    type: GET_Q,\n    q,\n    nextPageToken,\n    videos\n  };\n}\n\nexport function getNewVideos(nextPageToken, videos) {\n  return {\n    type: GET_NEW_VIDEOS,\n    nextPageToken,\n    videos\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getVideos } from '../actions/videos';\n\n/** Search input form\n *\n * used for searching the keys for the videos: just shows form and tracks input.\n *\n */\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { search: '' };\n  }\n\n  handleChange = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.getVideos('', this.state.search);\n    this.setState({ search: '' });\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            onChange={this.handleChange}\n            name=\"search\"\n            placeholder=\"Search\"\n            value={this.state.search}\n            size=\"60\"\n          />\n          <button> Search </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.q\n  };\n}\nconst connected = connect(\n  mapStateToProps,\n  { getVideos }\n);\n\nexport default connected(Search);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nclass VideoCard extends Component {\n  render() {\n    return (\n      <div className=\"VideoCard\">\n        <Link to={'/' + this.props.videoId}>\n          <img src={this.props.src} alt={this.props.title} />\n          <div className=\"cardContent\">\n            <h5> {this.props.title}</h5>\n            <p>\n              <small>{this.props.publishedAt}</small>\n            </p>\n            <p style={{ textAlign: 'left' }}>\n              {' '}\n              <small>\n                <b>Description:</b>\n                {this.props.description}\n              </small>\n            </p>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nVideoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  videoId: PropTypes.string.isRequired,\n  publishedAt: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\n\nexport default VideoCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport VideoCard from '../components/VideoCard';\nimport { getVideos } from '../actions/videos';\nconst uuidv4 = require('uuid/v4');\n\nclass VideoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { getAPI: true };\n  }\n  componentDidMount() {\n    window.addEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll);\n  }\n\n  infiniteScroll = async () => {\n    if (\n      document.body.scrollHeight - window.innerHeight - window.scrollY < 50 &&\n      this.state.getAPI\n    ) {\n      this.setState({ getAPI: false });\n      let result = await this.props.getVideos(\n        this.props.pageToken,\n        this.props.search\n      );\n      if (result) {\n        this.setState({ getAPI: true });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"videoListWithSeach\">\n        {this.props.search ? (\n          <h5>Current Search Term is: {this.props.search}</h5>\n        ) : null}\n        <div className=\"videoList\">\n          {this.props.currentPageVideos.map(video => (\n            <VideoCard {...video} key={uuidv4()} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    length: state.videos.length,\n    pageToken: state.nextPageToken,\n    search: state.q,\n    currentPageVideos: state.videos\n  };\n}\nconst connected = connect(\n  mapStateToProps,\n  { getVideos }\n);\nexport default connected(VideoList);\n","import React, { Component } from 'react';\nimport Search from '../containers/Seach';\nimport VideoList from '../containers/VideoList';\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <Search />\n        <VideoList />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nclass Video extends Component {\n  render() {\n    if (!this.props.video) {\n      return <div />;\n    }\n    return (\n      <div className=\"Video\">\n        <iframe\n          title={this.props.video.title}\n          width=\"100%\"\n          height=\"315\"\n          src={'https://www.youtube.com/embed/' + this.props.video.videoId}\n        />\n\n        <div className=\"VideoContent\">\n          <h5> {this.props.video.title}</h5>\n          <p>\n            <small>Channel: {this.props.video.channel}</small>\n          </p>\n          <p>\n            <b>\n              <small>{this.props.video.description}</small>\n            </b>\n          </p>\n        </div>\n        <button\n          onClick={() => {\n            this.props.history.push('/');\n          }}\n        >\n          Back to YouTube Home Page{' '}\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  if (state.videos.length === 0) {\n    return ownProps.history.push('/');\n  }\n  const video = state.videos.filter(\n    video => video.videoId === ownProps.match.params.videoId\n  )[0];\n  return {\n    video\n  };\n}\nconst connected = connect(mapStateToProps);\nexport default connected(Video);\n","import React, { Component } from 'react';\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Home from './Home';\nimport Video from '../containers/Video';\n\n/** Overall youtube search application :\n *\n * - shows header, nav links, and contains routes to:\n *   - homepage\n *   - individual video\n */\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavLink exact to=\"/\">\n            Roni's Youtube Project\n          </NavLink>\n          <NavLink exact to=\"/\">\n            Home Page\n          </NavLink>\n          <a\n            href=\"https://github.com/Ronihe/youtube-video-search\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Github Repo\n          </a>\n        </header>\n\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home />} />\n          <Route\n            exact\n            path=\"/:videoId\"\n            render={props => <Video {...props} />}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_Q, GET_NEW_VIDEOS } from './actions/types';\n\nfunction rootReducer(state = { q: '', nextPageToken: '', videos: [] }, action) {\n  switch (action.type) {\n    case GET_Q:\n      return {\n        q: action.q,\n        nextPageToken: action.nextPageToken,\n        videos: action.videos\n      };\n    case GET_NEW_VIDEOS:\n      return {\n        q: state.q,\n        nextPageToken: action.nextPageToken,\n        videos: [...state.videos, ...action.videos]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './rootReducer';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk)\n    // for some browsers do not have redux tools\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={'/youtube-video-search'}>\n      {/* <BrowserRouter> */}\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}