{"version":3,"sources":["actions/types.js","actions/videos.js","containers/Seach.js","components/VideoCard.js","containers/VideoList.js","containers/Pagination.js","components/Home.js","containers/Video.js","components/App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["NEXT_PAGE","GET_Q","PREVIOUS_PAGE","GET_NEW_VIDEOS","BASE_URL","MAX","KEY","getVideos","pageToken","arguments","length","undefined","q","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","nextPageToken","videos","wrap","_context","prev","next","alert","abrupt","axios","get","concat","params","key","maxResults","part","type","sent","data","items","map","video","videoId","id","src","snippet","thumbnails","medium","url","channel","channelTitle","title","publishedAt","description","getInitialVideos","getNewVideos","t0","console","log","stop","_x","apply","this","previousVideos","getNextVideos","Search","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","evt","setState","defineProperty","target","name","value","handleSubmit","preventDefault","state","search","react_default","createElement","className","onSubmit","onChange","placeholder","size","Component","connected","connect","VideoCard","react_router_dom","to","alt","style","textAlign","VideoList","infiniteScroll","document","body","scrollHeight","window","innerHeight","scrollY","page","documentElement","scrollTop","scroll","addEventListener","removeEventListener","currentPageVideos","components_VideoCard","assign","startIdx","endIdx","slice","Pagination","onClick","Home","Seach","containers_VideoList","containers_Pagination","Video","width","height","history","push","ownProps","filter","match","App","exact","href","rel","react_router","path","render","components_Home","containers_Video","Boolean","location","hostname","rootReducer","action","newPage","toConsumableArray","prePage","nextPage","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef63d0aa.chunk.js","sourcesContent":["export const NEXT_PAGE = 'NEXT_PAGE';\nexport const GET_Q = 'GET_Q';\nexport const PREVIOUS_PAGE = 'PREVIOUS_PAGE';\nexport const GET_NEW_VIDEOS = 'GET_NEW_VIDEOS';\n","import axios from 'axios';\nimport { NEXT_PAGE, GET_Q, PREVIOUS_PAGE, GET_NEW_VIDEOS } from './types';\n\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3/search';\nconst MAX = 12;\n\n//const KEY = 'AIzaSyCY6AZpSw-4mNJRbmCn_Bp8T4jTiANrwjM';\n//const KEY = 'AIzaSyAPw5O_9xI4yN_mxAepfwuS_Rn2qZieR5A';\n\nconst KEY = 'AIzaSyBYjNe14Q0ik3HdVS-qFZkjadzYQ-iKaA0';\n\nexport function getVideos(pageToken = '', q = '') {\n  return async function(dispatch) {\n    try {\n      if (!q) {\n        alert('Hi, What videos do you want to search?');\n        return;\n      }\n      // const response = await axios.get(\n      //   `${BASE_URL}?key=${KEY}&q=${q}&maxResults=${MAX}&part=snippet&pageToken=${pageToken}&type=video`\n      // );\n\n      const response = await axios.get(`${BASE_URL}`, {\n        params: {\n          key: KEY,\n          q,\n          pageToken,\n          maxResults: MAX,\n          part: 'snippet',\n          type: 'video'\n        }\n      });\n      const nextPageToken = response.data.nextPageToken;\n\n      const videos = response.data.items.map(video => ({\n        videoId: video.id.videoId,\n        src: video.snippet.thumbnails.medium.url,\n        channel: video.snippet.channelTitle,\n        title: video.snippet.title,\n        publishedAt: video.snippet.publishedAt,\n        description: video.snippet.description\n      }));\n\n      // if there is no pageToken, dispatch getInitialVideos\n      if (!pageToken)\n        return dispatch(getInitialVideos(q, nextPageToken, videos));\n      // if there is pageToken, dispatch getNewVideos\n      if (pageToken) return dispatch(getNewVideos(nextPageToken, videos));\n    } catch (err) {\n      alert(err);\n      console.log('error');\n    }\n  };\n}\n\nexport function getInitialVideos(q, nextPageToken, videos) {\n  return {\n    type: GET_Q,\n    q,\n    nextPageToken,\n    videos\n  };\n}\n\nexport function getNewVideos(nextPageToken, videos) {\n  return {\n    type: GET_NEW_VIDEOS,\n    nextPageToken,\n    videos\n  };\n}\n\nexport function previousVideos() {\n  return {\n    type: PREVIOUS_PAGE\n  };\n}\n\nexport function getNextVideos() {\n  return {\n    type: NEXT_PAGE\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getVideos } from '../actions/videos';\n\n/** Search input form\n *\n * used for searching the keys for the videos: just shows form and tracks input.\n *\n */\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { search: '' };\n  }\n\n  handleChange = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.getVideos('', this.state.search);\n    this.setState({ search: '' });\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            onChange={this.handleChange}\n            name=\"search\"\n            placeholder=\"Search\"\n            value={this.state.search}\n            size=\"60\"\n          />\n          <button> Search </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.q\n  };\n}\nconst connected = connect(\n  mapStateToProps,\n  { getVideos }\n);\n\nexport default connected(Search);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nclass VideoCard extends Component {\n  render() {\n    return (\n      <div className=\"VideoCard\">\n        <Link to={'/' + this.props.videoId}>\n          <img src={this.props.src} alt={this.props.title} />\n          <div className=\"cardContent\">\n            <h5> {this.props.title}</h5>\n            <p>\n              <small>{this.props.publishedAt}</small>\n            </p>\n            <p style={{ textAlign: 'left' }}>\n              {' '}\n              <small>\n                <b>Description:</b>\n                {this.props.description}\n              </small>\n            </p>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nVideoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  videoId: PropTypes.string.isRequired,\n  publishedAt: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\n\nexport default VideoCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport VideoCard from '../components/VideoCard';\nimport { getVideos, previousVideos, getNextVideos } from '../actions/videos';\n\nclass VideoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { scroll: false };\n  }\n  componentDidMount() {\n    window.addEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.infiniteScroll);\n  }\n\n  infiniteScroll = async () => {\n    if (document.body.scrollHeight - window.innerHeight - window.scrollY <= 0) {\n      if (this.props.page * 12 < this.props.length) {\n        this.props.getNextVideos();\n      } else {\n        await this.props.getVideos(this.props.pageToken, this.props.search);\n      }\n\n      document.documentElement.scrollTop = 50;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"videoListWithSeach\">\n        {this.props.search ? (\n          <h5>\n            Current Search Term is: {this.props.search} | Current Page:{' '}\n            {this.props.page}\n          </h5>\n        ) : null}\n        <div className=\"videoList\">\n          {this.props.currentPageVideos.map(video => (\n            <VideoCard {...video} key={video.videoId} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const startIdx = (state.page - 1) * 12;\n  const endIdx = startIdx + 12;\n  return {\n    length: state.videos.length,\n    pageToken: state.nextPageToken,\n    page: state.page,\n    search: state.q,\n    currentPageVideos: state.videos.slice(startIdx, endIdx)\n  };\n}\nconst connected = connect(\n  mapStateToProps,\n  { getVideos, previousVideos, getNextVideos }\n);\nexport default connected(VideoList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getVideos, previousVideos, getNextVideos } from '../actions/videos';\nimport PropTypes from 'prop-types';\nclass Pagination extends Component {\n  render() {\n    return (\n      <div className=\"Pagination\">\n        {this.props.search ? (\n          <div>\n            {this.props.page > 1 ? (\n              <button onClick={this.props.previousVideos}> previous </button>\n            ) : null}\n            {this.props.page}\n            <button\n              onClick={\n                this.props.page * 12 < this.props.length\n                  ? this.props.getNextVideos\n                  : () => {\n                      this.props.getVideos(\n                        this.props.pageToken,\n                        this.props.search\n                      );\n                    }\n              }\n            >\n              Next\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    length: state.videos.length,\n    page: state.page,\n    pageToken: state.nextPageToken,\n    search: state.q\n  };\n}\nconst connected = connect(\n  mapStateToProps,\n  { getVideos, previousVideos, getNextVideos }\n);\n\nPagination.propTypes = {\n  previousVideos: PropTypes.func.isRequired,\n  getNextVideos: PropTypes.func.isRequired,\n  getVideos: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  length: PropTypes.number.isRequired,\n  pageToken: PropTypes.string.isRequired,\n  search: PropTypes.string\n};\n\nexport default connected(Pagination);\n","import React, { Component } from 'react';\nimport Search from '../containers/Seach';\nimport VideoList from '../containers/VideoList';\nimport Pagination from '../containers/Pagination';\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <Search />\n        <VideoList />\n        <Pagination />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nclass Video extends Component {\n  render() {\n    if (!this.props.video) {\n      return <div />;\n    }\n    return (\n      <div className=\"Video\">\n        <iframe\n          title={this.props.video.title}\n          width=\"100%\"\n          height=\"315\"\n          src={'https://www.youtube.com/embed/' + this.props.video.videoId}\n        />\n\n        <div className=\"VideoContent\">\n          <h5> {this.props.video.title}</h5>\n          <p>\n            <small>Channel: {this.props.video.channel}</small>\n          </p>\n          <p>\n            <b>\n              <small>{this.props.video.description}</small>\n            </b>\n          </p>\n        </div>\n        <button\n          onClick={() => {\n            this.props.history.push('/');\n          }}\n        >\n          Back to YouTube Home Page{' '}\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  if (state.videos.length === 0) {\n    return ownProps.history.push('/');\n  }\n  const video = state.videos.filter(\n    video => video.videoId === ownProps.match.params.videoId\n  )[0];\n  return {\n    video\n  };\n}\nconst connected = connect(mapStateToProps);\nexport default connected(Video);\n","import React, { Component } from 'react';\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Home from './Home';\nimport Video from '../containers/Video';\n\n/** Overall youtube search application :\n *\n * - shows header, nav links, and contains routes to:\n *   - homepage\n *   - individual video\n */\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavLink exact to=\"/\">\n            Roni's Youtube Project\n          </NavLink>\n          <NavLink exact to=\"/\">\n            Home Page\n          </NavLink>\n          <a\n            href=\"https://github.com/Ronihe/youtube-video-search\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Github Repo\n          </a>\n        </header>\n\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home />} />\n          <Route\n            exact\n            path=\"/:videoId\"\n            render={props => <Video {...props} />}\n          />\n          {/* <Redirect to=\"/\" /> */}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_Q,\n  NEXT_PAGE,\n  PREVIOUS_PAGE,\n  GET_NEW_VIDEOS\n} from './actions/types';\n\nfunction rootReducer(\n  state = { q: '', nextPageToken: '', page: 1, videos: [] },\n  action\n) {\n  switch (action.type) {\n    case GET_Q:\n      return {\n        q: action.q,\n        page: 1,\n        nextPageToken: action.nextPageToken,\n        videos: action.videos\n      };\n    case GET_NEW_VIDEOS:\n      const newPage = state.page + 1;\n      return {\n        q: state.q,\n        page: newPage,\n        nextPageToken: action.nextPageToken,\n        videos: [...state.videos, ...action.videos]\n      };\n    case PREVIOUS_PAGE:\n      const prePage = state.page > 1 ? state.page - 1 : 1;\n      return {\n        q: state.q,\n        page: prePage,\n        nextPageToken: state.nextPageToken,\n        videos: [...state.videos]\n      };\n    case NEXT_PAGE:\n      const nextPage = state.page + 1;\n      return {\n        q: state.q,\n        page: nextPage,\n        nextPageToken: state.nextPageToken,\n        videos: [...state.videos]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from './rootReducer';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nReactDOM.render(\n  <Provider store={store}>\n    {/* <BrowserRouter basename={'/youtube-video-search'}> */}\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}